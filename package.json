{
  "name": "morio",
  "version": "0.7.1",
  "description": "Morio provides the plumbing for your observability needs",
  "license": "EUPL",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/certeu/morio.git"
  },
  "author": "CERT-EU <services@cert.europa.eu>",
  "bugs": {
    "url": "https://github.com/certeu/morio/issues"
  },
  "homepage": "https://morio.it/",
  "workspaces": [
    "api",
    "config",
    "core",
    "docs",
    "schema",
    "shared",
    "tap",
    "ui"
  ],
  "devDependencies": {
    "dotenv": "^16.4.7",
    "dotenv-cli": "^7.4.4",
    "esbuild": "^0.23.1",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react": "^7.35.2",
    "husky": "^9.1.5",
    "lint-staged": "^15.2.10",
    "nodemon": "^3.1.4",
    "pino-pretty": "^11.2.2",
    "prettier": "^3.3.3",
    "prettyjson": "^1.2.5"
  },
  "engines": {
    "node": ">=20"
  },
  "scripts": {
    "isetup": "dotenv -e .env -- sh -c 'for dns in $(echo $MORIO_TEST_DNS_NAMES | tr \",\" \" \"); do echo \"[instances]\n$dns\" > /tmp/ansible_inventory && ansible-playbook -i /tmp/ansible_inventory --extra-vars \"ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_user=admin ansible_ssh_common_args=\\\"-o StrictHostKeyChecking=no\\\"\" ./ansible/playbooks/install_moriod.yml; done'",
    "ireset": "dotenv -e .env -- sh -c 'for dns in $(echo $MORIO_TEST_DNS_NAMES | tr \",\" \" \"); do echo \"[instances]\n$dns\" > /tmp/ansible_inventory && ansible-playbook -i /tmp/ansible_inventory --extra-vars \"ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_user=admin ansible_ssh_common_args=\\\"-o StrictHostKeyChecking=no\\\"\" ./ansible/playbooks/reset_moriod.yml; done'",
    "itest": "node ./tests/test-runner.mjs",
    "iconfigure": "node ./scripts/configure-test-vm.mjs",
    "ideploy": "ansible-playbook ./ansible/playbooks/deploy_moriod.yml --extra-vars @json-templates/deploy.json",
    "idestroy": "ansible-playbook ./ansible/playbooks/destroy_moriod.yml",
    "buildall": "npm run build:dev",
    "buildall:dev": "./scripts/run-build.sh dev",
    "buildall:testing": "./scripts/run-build.sh testing",
    "buildall:canary": "./scripts/run-build.sh canary",
    "buildall:stable": "./scripts/run-build.sh stable",
    "build:api": "./scripts/build-container.sh api",
    "build:core": "./scripts/build-container.sh core",
    "build:clients": "./scripts/build-clients.sh",
    "build:dbuilder": "./builders/dbuilder/build-container.sh",
    "build:rbuilder": "./builders/rbuilder/build-container.sh",
    "build:tap": "./scripts/build-container.sh tap",
    "build:ui": "./scripts/build-container.sh ui",
    "build:local-release": "./scripts/build-local-release.sh",
    "build:moriod-repo.deb": "./scripts/build-moriod-repo-deb.sh",
    "build:moriod.deb": "./scripts/build-moriod-deb.sh",
    "cdp": "npm run check-docs-page",
    "check-docs-page": "./scripts/check-docs-page.sh",
    "check": "./scripts/check-doc.sh",
    "ci:build.api": "./scripts/ci-build-container.sh api",
    "ci:build.core": "./scripts/ci-build-container.sh core",
    "ci:build.dbuilder": "./scripts/ci-build-container.sh dbuilder",
    "ci:build.rbuilder": "./scripts/ci-build-container.sh rbuilder",
    "ci:build.moriod.rpm": "./scripts/ci-build-moriod-rpm.sh",
    "ci:build.tap": "./scripts/ci-build-container.sh tap",
    "ci:build.ui": "./scripts/ci-build-container.sh ui",
    "ci:eslint": "npm run lint",
    "ci:prettier": "npm run prettier",
    "ci:spellcheck": "./scripts/ci-spellcheck-docs.sh",
    "docker:build.moriod.deb": "./scripts/docker-build-moriod-deb.sh",
    "docker:build.moriod.rpm": "./scripts/docker-build-moriod-rpm.sh",
    "destroy": "./scripts/destroy.sh",
    "dev": "./core/run-dev-container.sh",
    "e2e:ephemeral": "cd ui && npm run test:ephemeral && cd -",
    "get": "node --no-warnings shared/src/cli-get.mjs",
    "help": "cat docs/includes/cli-help-content.mdx",
    "kickstart": "npm install && npm install --global husky && husky install && npm run prebuild",
    "lint": "npm run lint --workspace=core && npm run lint --workspace=api && npm run lint --workspace=ui",
    "logs:api": "docker logs -n 20 -f morio-api | pino-pretty -i pid,time,name,hostname",
    "logs:core": "docker logs -n 20 -f morio-core | pino-pretty -i pid,time,name,hostname",
    "logs:tap": "docker logs -n 20 -f morio-tap | pino-pretty -i pid,time,name,hostname",
    "prebuild": "npm run reconfigure",
    "predev": "npm run reconfigure",
    "prettier": "npx prettier --write .",
    "print:cli.js": "node ./scripts/print-cli-config.mjs",
    "print:cli.sh": "./scripts/print-cli-config.sh",
    "prod": "./core/run-prod-container.sh",
    "pull-oci": "./scripts/pull-oci-images.sh",
    "prereconfigure": "./scripts/preconfigure.sh",
    "reconfigure": "node scripts/reconfigure.mjs",
    "redev": "npm run destroy && npm run dev",
    "reprod": "npm run destroy && npm run prod",
    "reversion": "node scripts/reversion.mjs && npm run reconfigure",
    "rev": "npm run reversion",
    "ship": "npm run ship:testing",
    "ship:testing": "RELEASE_CHANNEL=testing ./scripts/ship.sh",
    "ship:canary": "RELEASE_CHANNEL=canary ./scripts/ship.sh",
    "ship:stable": "RELEASE_CHANNEL=stable ./scripts/ship.sh",
    "spellcheck": "./scripts/spellcheck-docs.sh",
    "subscribe": "node --no-warnings scripts/kafka-client.mjs",
    "test": "echo \"No test target specified.\nTry 'npm run test:api' or 'npm run test:core' instead.\" && exit 1",
    "test:api": "npm run redev && ./scripts/sleep 7 && ./api/run-test-container.sh && npm run redev",
    "test:core": "npm run destroy && ./core/run-test-container.sh && npm run redev"
  },
  "dependencies": {
    "mocha": "^11.0.1"
  }
}
