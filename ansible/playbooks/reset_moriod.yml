---
- name: Reset Morio configuration on the EC2 instances
  hosts: all
  become: yes
  become_method: sudo
  tasks:
    - name: Stop Morio service
      ansible.builtin.systemd:
        name: moriod
        state: stopped
      ignore_errors: true
      register: stop_result

    - name: Log result of stopping Morio service
      debug:
        msg: "Morio service stop result: {{ stop_result.stdout | default('No output') }}"

    - name: Make backup directory
      ansible.builtin.file:
        path: '{{ ansible_env.HOME }}/.moriod'
        state: directory
        mode: '0755'
      ignore_errors: true

    - name: Find version files
      ansible.builtin.find:
        paths: /etc/morio/moriod
        patterns: version*
      register: version_files

    - name: Backup version files
      ansible.builtin.copy:
        src: '{{ item.path }}'
        dest: '{{ ansible_env.HOME }}/.moriod/'
        remote_src: yes
      with_items: '{{ version_files.files }}'
      ignore_errors: true

    - name: Find all files in the directory
      ansible.builtin.find:
        paths: /etc/morio/moriod
        file_type: file
      register: files_to_remove

    - name: Remove all files in the directory
      ansible.builtin.file:
        path: '{{ item.path }}'
        state: absent
      with_items: '{{ files_to_remove.files }}'
      ignore_errors: true

    - name: Find all log files in the directory
      ansible.builtin.find:
        paths: /var/log/morio/moriod
        file_type: file
      register: log_files

    - name: Remove all log files
      ansible.builtin.file:
        path: '{{ item.path }}'
        state: absent
      with_items: '{{ log_files.files }}'
      ignore_errors: true

    - name: Find all data files in the directory
      ansible.builtin.find:
        paths: /var/lib/morio/moriod
        file_type: file
      register: db_files

    - name: Remove all data files
      ansible.builtin.file:
        path: '{{ item.path }}'
        state: absent
      with_items: '{{ db_files.files }}'
      ignore_errors: true

    - name: Find version files in backup
      ansible.builtin.find:
        paths: '{{ ansible_env.HOME }}/.moriod'
        patterns: version*
      register: backup_version_files

    - name: Copy back version files
      ansible.builtin.copy:
        src: '{{ item.path }}'
        dest: /etc/morio/moriod/
        remote_src: yes
      with_items: '{{ backup_version_files.files }}'
      ignore_errors: true

    - name: Start Morio service
      ansible.builtin.systemd:
        name: moriod
        state: started
        enabled: yes # Ensure the service is enabled to start on boot
      register: start_result

    - name: Log result of starting Morio service
      debug:
        msg: "Morio service start result: {{ start_result.stdout | default('No output') }}"
