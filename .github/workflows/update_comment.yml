name: Update Comment

on:
  workflow_call:
    inputs:
      COMMENT_ID:
        description: "The ID of the comment to update"
        required: true
        type: string
      STEP_NAME:
        description: "The name of the step to update"
        required: true
        type: string
      STATUS:
        description: "The status of the step (Pending, Success, Fail)"
        required: true
        type: string

jobs:
  update_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Update the comment
        run: |
          update_comment() {
            STEP_NAME="$1"
            STATUS="$2"
            COMMENT_ID="$3"

            # Define the icons for each status
            case "$STATUS" in
              "Pending") ICON="⏳" ;;
              "Success") ICON="✅" ;;
              "Fail") ICON="❌" ;;
              *) ICON="⏳" ;; # Default to Pending if status is unrecognized
            esac

            # Fetch the current comment body
            COMMENT_BODY=$(curl -s -X GET \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/comments/$COMMENT_ID | jq -r .body)

            # Add or update the step's status with the icon
            if echo "$COMMENT_BODY" | grep -q "| $STEP_NAME |"; then
              # Update existing step
              UPDATED_BODY=$(echo "$COMMENT_BODY" | sed "s/| $STEP_NAME |.*|/| $STEP_NAME | $ICON $STATUS |/")
            else
              # Append a new step
              UPDATED_BODY=$(echo -e "$COMMENT_BODY\\n| $STEP_NAME | $ICON $STATUS |")
            fi

            # Update the comment on GitHub
            curl -s -X PATCH \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -d "{\"body\": \"$UPDATED_BODY\"}" \
              https://api.github.com/repos/${{ github.repository }}/issues/comments/$COMMENT_ID > /dev/null
          }

          # Run the function with the inputs from the calling workflow
          update_comment "${{ inputs.STEP_NAME }}" "${{ inputs.STATUS }}" "${{ inputs.COMMENT_ID }}"